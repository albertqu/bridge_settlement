import socket


class SteadySocket:
    MAXMSGLEN = 4096
    EOFChar = '!'

    def __init__(self, sockt=None):
        if sockt is None:
            self.sock = socket.socket()
        else:
            self.sock = sockt

    def connect(self, host, port):
        return self.sock.connect((host, port))

    def send(self, data, flags=0):
        data_sent = 0
        tot_len = len(data)
        while data_sent < data:
            sent = self.sock.send(data[data_sent:])
            if sent == 0:
               raise RuntimeError("Connection interrupted...")
            data_sent += sent

    def recv(self):
        data_recv = ""
        bytes_recv = 0
        while bytes_recv < self.MAXMSGLEN:
            msg = str(self.sock.recv(self.MAXMSGLEN - bytes_recv))
            if len(msg) == 0:
                return msg
            if msg.find(self.EOFChar) != -1:
                return msg
            data_recv += msg
            bytes_recv += len(msg)
        return data_recv

    def close(self):
        self.sock.close()


IP = '192.168.3.4'
port = 8000

rpisock = SteadySocket()
while True:
    try:
        rpisock.connect(IP, port)
        msg = input("type a message\n")
        rpisock.send(bytes(msg))
        data = rpisock.recv()
        print(data)
    except:
        pass
